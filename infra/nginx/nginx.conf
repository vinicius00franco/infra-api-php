upstream php-fpm {
    server api:9000;
    keepalive 10;
}

# Definir o limite de arquivos abertos por processo worker. Aqui está configurado para 8192,
# permitindo mais conexões simultâneas e arquivos abertos por worker.
#worker_rlimit_nofile 8192;


# Definir o caminho do cache FastCGI, nível de cache e tamanho da zona de cache (200MB).
# O cache ficará inativo por 60 minutos antes de ser invalidado.
fastcgi_cache_path /var/cache/nginx levels=1:2 keys_zone=phpcache:200m inactive=60m;

# Chave para armazenar o cache FastCGI, baseada no esquema, método, host e URI da requisição.
fastcgi_cache_key "$scheme$request_method$host$request_uri";

# Habilitar travamento do cache FastCGI para evitar múltiplos processos simultâneos tentando
# gerar cache para a mesma requisição. O timeout está configurado para 5 segundos.
fastcgi_cache_lock on;
fastcgi_cache_lock_timeout 5s;

# Configurar os buffers do FastCGI para otimizar a leitura das respostas grandes.
fastcgi_buffers 16 16k;
fastcgi_buffer_size 32k;

# Ajusta o número de processos de trabalho (workers) automaticamente com base no número de núcleos de CPU disponíveis.
#worker_processes auto;

# Definir a quantidade de conexões simultâneas que um worker pode gerenciar. Aqui está configurado para 1024.
#events {
 #   worker_connections 1024;
#}

server {
    listen 80;
    server_name localhost;

    # Definir o diretório raiz e o arquivo index padrão.
    root /var/www/html/public;
    index index.php;

    # Configurar a localização principal para servir os arquivos ou, em caso de erro,
    # redirecionar para o index.php com os parâmetros apropriados.
    location / {
        try_files $uri /index.php$is_args$args;
    }

    # Configuração para processamento de arquivos PHP via FastCGI.
    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass api:9000;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;


        fastcgi_buffers 4 256k;
        fastcgi_buffer_size 128k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_read_timeout 60s;

        # Habilitar o cache FastCGI para respostas PHP.
        fastcgi_cache phpcache;

        # O cache é válido por 60 minutos para códigos de resposta 200 e 302,
        # e por 1 minuto para respostas 404.
        fastcgi_cache_valid 200 302 60m;
        fastcgi_cache_valid 404 1m;

        # Adicionar um cabeçalho para verificar o status do cache (hit, miss, etc.).
        add_header X-FastCGI-Cache $upstream_cache_status;
    }

    # Habilitar compressão Gzip para reduzir o tamanho das respostas.
    # A compressão está ativada para tipos de arquivos comuns como CSS, JS, JSON, XML e SVG.
    gzip on;
    gzip_types text/css application/javascript application/json text/plain application/xml image/svg+xml;

    # Configuração para cache de arquivos estáticos (CSS, JS, imagens, etc.).
    # Define um tempo de expiração de 1 ano para esses arquivos, pois raramente mudam.
    location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|webp|svg)$ {
        expires 1y;
        add_header Cache-Control "public";
    }

    # Configurar os logs de erro e de acesso. O nível de log de erro foi ajustado para "warn",
    # reduzindo a verbosidade dos logs.
    error_log  /var/log/nginx/error.log warn;
    access_log /var/log/nginx/access.log;
}
